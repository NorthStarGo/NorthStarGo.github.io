{"meta":{"title":"NorthStars","subtitle":"","description":"","author":"NorthStarGo","url":"http://yoursite.com","root":"/"},"pages":[{"title":"关于","date":"2020-06-17T03:34:07.061Z","updated":"2020-06-17T03:34:07.061Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2020-06-17T03:32:11.106Z","updated":"2020-06-17T03:32:11.106Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"所有分类","date":"2020-06-17T03:29:33.568Z","updated":"2020-06-17T03:29:33.568Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-06-17T03:31:12.769Z","updated":"2020-06-17T03:31:12.769Z","comments":true,"path":"mylist/index.html","permalink":"http://yoursite.com/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-06-17T03:30:24.686Z","updated":"2020-06-17T03:30:24.686Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"如何利用开源CDN服务 jsDelivr 优化加速部署的网站","slug":"如何使用CDN服务jsDelivr-优化加速博客网站","date":"2020-06-17T10:32:47.000Z","updated":"2020-06-17T11:21:19.241Z","comments":true,"path":"2020/06/17/如何使用CDN服务jsDelivr-优化加速博客网站/","link":"","permalink":"http://yoursite.com/2020/06/17/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8CDN%E6%9C%8D%E5%8A%A1jsDelivr-%E4%BC%98%E5%8C%96%E5%8A%A0%E9%80%9F%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/","excerpt":"为什么要使用 CDN放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。","text":"为什么要使用 CDN放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。 CDN 是什么CDN 的全称是 Content Delivery Network，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。 如何使用 GitHub 推荐的开源 CDN 项目 jsDelivr ?1、新建 Github 仓库 2、克隆 Github 仓库到本地 点击 Clone or download，一键复制仓库地址 在本地目录右键 Git Bash Here，执行以下命令： 1git clone 一键复制的仓库地址 3、上传资源复制需要上传的资源到本地 git 仓库（注：jsDelivr 不支持加载超过 20M 的资源），在本地 git 仓库目录下右键 Git Bash Here，执行以下命令： 1234git status &#x2F;&#x2F;查看状态git add . &#x2F;&#x2F;添加所有文件到暂存区git commit -m &#39;第一次提交&#39; &#x2F;&#x2F;把文件提交到仓库git push &#x2F;&#x2F;推送至远程仓库 4、发布仓库点击 release 发布自定义发布版本号 5、通过 jsDelivr 引用资源使用方法： 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;你的用户名&#x2F;你的仓库名@发布的版本号&#x2F;文件路径 例如： 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;NorthStarGo&#x2F;NorthStarGo.github.io@1.0&#x2F;images&#x2F;head.jpg 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;NorthStarGo&#x2F;NorthStarGo.github.io@2.0.1&#x2F;css&#x2F;style.css 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;NorthstarGo&#x2F;cdn@3.1.3&#x2F;&#x2F;The%20Pet%20Girl%20of%20Sakurasou.mp4 注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等， 具体使用方法(进阶玩法)：// 加载任何 Github 发布、提交或分支 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;user&#x2F;repo@version&#x2F;file // 加载 jQuery v3.2.1 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3.2.1&#x2F;dist&#x2F;jquery.min.js // 使用版本范围而不是特定版本 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3.2&#x2F;dist&#x2F;jquery.min.js 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js // 完全省略该版本以获取最新版本 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js // 将“.min”添加到任何 JS/CSS 文件中以获取缩小版本，如果不存在，将为会自动生成 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery@3.2.1&#x2F;src&#x2F;core.min.js // 在末尾添加 / 以获取资源目录列表 1https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;jquery&#x2F;jquery&#x2F; ————————————————","categories":[{"name":"CDN","slug":"CDN","permalink":"http://yoursite.com/categories/CDN/"}],"tags":[{"name":"CDN","slug":"CDN","permalink":"http://yoursite.com/tags/CDN/"}]},{"title":"MarkDown语法大全","slug":"MarkDown语法大全","date":"2020-06-17T00:35:57.000Z","updated":"2020-06-17T08:18:51.772Z","comments":true,"path":"2020/06/17/MarkDown语法大全/","link":"","permalink":"http://yoursite.com/2020/06/17/MarkDown%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8/","excerpt":"一、MarkDown 概述1.1 概述MarkDown 易于阅读，方便创作 web 文档，利于各平台无缝分发Markdown 语法灵感最大的来源还是纯文本 email 的格式，完全由标点符号标签组成的纯文本。Markdown 文件应该以纯文本形式原样发布，不应该包含标记标签和格式化指令。","text":"一、MarkDown 概述1.1 概述MarkDown 易于阅读，方便创作 web 文档，利于各平台无缝分发Markdown 语法灵感最大的来源还是纯文本 email 的格式，完全由标点符号标签组成的纯文本。Markdown 文件应该以纯文本形式原样发布，不应该包含标记标签和格式化指令。 1.2 内联 HTML 语法HTML 是一种发布格式，Markdown 是一种创作格式。Markdown 语法集合比较小，只是 HTML 标签的一小部分。对于 Markdown 中未包含的标签, 可以直接使用 HTML 标签，例如用 HTML 标签替代 Markdown 的链接语法。 1.3 特殊字符自动转义在 HTML 中, 有两个字符需要特殊对待: &lt; 和 &amp;，左尖括号用于起始标签。如果你想将它们用作字面量, 你必须将它们转义为字符实体, 例如&lt; 和 &amp;。 二、行内语法讲解2.1 注释的表述代码法12345678910111213&lt;div style&#x3D;&#39;display: none&#39;&gt;我是注释，不会在浏览器中显示。&lt;&#x2F;div&gt;html注释，快捷键 Ctrl+ &#x2F;。&lt;!--我是注释，不会在浏览器中显示。--&gt;&lt;!--我是多段注释，不会在浏览器中显示。 --&gt; hack 方法hack 方法就是利用 markdown 的解析原理来实现注释的。一般有的 markdown 解析器不支持上面的注释方法，这个时候就可以用 hack 方法。hack 方法比上面 2 种方法稳定得多，但是语义化太差。 1234567[&#x2F;&#x2F;]: # &quot;哈哈我是最强注释，不会在浏览器中显示。&quot;[^_^]: # (哈哈我是最萌注释，不会在浏览器中显示。)[&#x2F;&#x2F;]: &lt;&gt; (哈哈我是注释，不会在浏览器中显示。)[comment]: &lt;&gt; (哈哈我是注释，不会在浏览器中显示。) 2.2 分级标题、任务列表2.2.1 分级标题代码: 1234567891011# 一级标题 (一级标题自带分隔线)## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 (最多6级标题) 实际效果: 一级标题 (一级标题自带分隔线)二级标题三级标题四级标题五级标题六级标题 (最多 6 级标题)2.2.2 任务列表Markdown 语法：null 2.3 缩进、换行、空行、对齐方式换行1Markdown 直接 在一行字的上下行敲换行组合键就行 空行1敲空格好了 对齐方式代码： 123&lt;center&gt;行中心对齐&lt;&#x2F;center&gt;&lt;p align&#x3D;&quot;left&quot;&gt;行左对齐&lt;&#x2F;p&gt;&lt;p align&#x3D;&quot;right&quot;&gt;行右对齐&lt;&#x2F;p&gt; 显示效果： 行中心对齐 行左对齐 行右对齐 2.4 斜体、粗体、删除线、下划线、背景高亮代码： 12345*斜体*或*斜体***粗体****_加粗斜体_**~~删除线~~&gt; 背景高亮 显示效果： 斜体或斜体 粗体 加粗斜体 删除线 背景高亮 2.5 超链接、页内链接、自动链接、注脚行内式语法说明： []里写链接文字，()里写链接地址, ()中的””中可以为链接指定 title 属性，title 属性可加可不加。title 属性的效果是鼠标悬停在链接上会出现指定的 title 文字，链接地址与 title 前有一个空格。 代码： 1欢迎阅读 [Northstar blog](https:&#x2F;&#x2F;northstargo.github.io&#x2F; &quot;NorthStar&quot;) 显示效果： Northstar blog 参考式超链接语法说明： 参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址。 如果链接文字本身可以做为链接标记，你也可以写成[链接文字][][链接文字]：链接地址的形式，见代码的最后一行。 代码： 12345我经常去的几个网站[Google][1]、[Bilibili][2]。[1]: http:&#x2F;&#x2F;www.google.com[2]: http:&#x2F;&#x2F;www.bilibili.com 显示效果： 我经常去的几个网站Google、Bilibili。 注脚语法说明： 在需要添加注脚的文字后加上脚注名字[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。 注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经 Markdown 转换后，也会自动归类到文章的最后。 代码： 1234使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2]。[^1]: Markdown 是一种纯文本标记语言[^2]: HyperText Markup Language 超文本标记语言 显示效果： [^1]: Markdown 是一种纯文本标记语言 [^2]: HyperText Markup Language 超文本标记语言 使用 Markdown1可以效率的书写文档, 直接转换成 HTML2。 注：脚注自动被搬运到最后面，请到文章末尾查看，脚注后方的链接可以直接跳转回到加注的地方。 邮箱超链接语法说明： Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如： 代码： 12&lt;http:&#x2F;&#x2F;example.com&#x2F;&gt;&lt;address@example.com&gt; 显示效果： &lt;http://example.com/&gt; &lt;address@example.com&gt; 2.5 无序列表、有序列表、定义型列表无序列表使用 *，+，- 表示无序列表。代码： 12345- 无序列表项 一* 无序列表项 二- 无序列表项 三 显示效果： 无序列表项 一 无序列表项 二 无序列表项 三 有序列表 有序列表则使用数字接着一个英文句点。 代码： 1231. 有序列表项 一2. 有序列表项 二3. 有序列表项 三 显示效果： 有序列表项 一 有序列表项 二 有序列表项 三 2.6 插入图像语法中图片 Alt 的意思是如果图片因为某些原因不能显示，就用定义的图片 Alt 文字来代替图片。 图片 Title 则和链接中的 Title 一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略.但建议写上。 Markdown 语法： 1234![GitHub set up](http:&#x2F;&#x2F;zh.mweb.im&#x2F;asset&#x2F;img&#x2F;set-up-git.gif &quot;图片Title&quot;)格式: ![图片Alt](图片地址 &quot;图片Title&quot;) 效果如下： 2.7 多级引用语法说明： 引用需要在被引用的文本前加上&gt;符号和空格，允许多层嵌套，也允许你偷懒只在整个段落的第一行最前面加上 &gt; 。 代码： 123&gt; &gt; &gt; 请问 Markdwon 怎么用？ - 小白 &lt;br&gt;&gt; &gt; &gt; 自己看教程！ - 愤青 &lt;br&gt;&gt; &gt; &gt; 教程在哪？ - 小白 实际效果: 请问 Markdwon 怎么用？ - 小白 自己看教程！ - 愤青 教程在哪？ - 小白 2.8 转义字符、字体、字号、颜色转义字符Markdown 中的转义字符为\\，转义的有： 1\\ 反斜杠 &#96; 反引号 \\* 星号 \\_ 下划线 &#123;&#125; 大括号 [] 中括号 () 小括号 &lt;br&gt; # 井号 + 加号 - 减号 . 英文句号 ! 感叹号 2.9 字体、字号、颜色代码： 123456&lt;font face&#x3D;&quot;黑体&quot;&gt;我是黑体字&lt;&#x2F;font&gt;&lt;font face&#x3D;&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;&#x2F;font&gt;&lt;font face&#x3D;&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;&#x2F;font&gt;&lt;font color&#x3D;#0099ff size&#x3D;12 face&#x3D;&quot;黑体&quot;&gt;黑体&lt;&#x2F;font&gt;&lt;font color&#x3D;gray size&#x3D;5&gt;gray&lt;&#x2F;font&gt;&lt;font color&#x3D;#00ffff size&#x3D;3&gt;我是彩色字体&lt;&#x2F;font&gt; 显示效果： 我是黑体字我是微软雅黑我是华文彩云黑体gray我是彩色 三、块语法讲解– 3.1 内容目录在段落中填写 [TOC] 以显示全文内容的目录结构。 [TOC]效果参见最上方的目录。 3.2 代码块对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(Tab), 另一种是利用”`”符号（一般在 ESC 键下方）包裹代码。 行内式代码： 1C 语言里的函数 &#96;scanf()&#96; 怎么使用？ 显示效果：C 语言里的函数 scanf() 怎么使用？ 效果 : 行内式代码高亮 一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。 代码： 12345#include &lt;stdio.h&gt;int main(void)&#123;printf(&amp;#34;Hello world\\n&amp;#34;);&#125; 显示效果： #include &lt;stdio.h&gt;int main(void){printf(&#34;Hello world\\n&#34;);} 3.3 表格语法说明：列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。 左对齐， :-: 中心对齐，-: 右对齐 1234567表格代码：| 学号 | 姓名 | 序号 || ------ | ---- | ---- || 小明明 | 男 | 5 || 小红 | 女 | 79 || 小陆 | 男 | 192 | 实际效果:| 学号 | 姓名 | 序号 || —— | —- | —- || 小明明 | 男 | 5 || 小红 | 女 | 79 || 小陆 | 男 | 192 | 3.4 分隔线12345代码：------ 显示效果都一样： 3.5 MarkDown 可以使用 HTML 代码插入范例用的 HTML 原始码，只需要复制贴上，剩下的 Markdown 都会帮你处理. 例如： 第一个例子： 123&lt;div class&#x3D;&quot;footer&quot;&gt;© 2004 Foo Corporation&lt;&#x2F;div&gt; 实际效果: 注脚处显示 © 2004 Foo Corporation 第二个例子： 1234567891011121314151617&lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th rowspan&#x3D;&quot;2&quot;&gt;值班人员&lt;&#x2F;th&gt;&lt;th&gt;星期一&lt;&#x2F;th&gt;&lt;th&gt;星期二&lt;&#x2F;th&gt;&lt;th&gt;星期三&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;tr&gt;&lt;td&gt;李强&lt;&#x2F;td&gt;&lt;td&gt;张明&lt;&#x2F;td&gt;&lt;td&gt;王平&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;&lt;&#x2F;center&gt; 显示效果： 值班人员 星期一 星期二 星期三 李强 张明 王平 3.6 特殊字特殊字符 描述字符的代码 代码: 12345678910和号 &amp;人民币 &amp;yen;版权 &amp;copy;注册商标 &amp;reg;摄氏度 &amp;deg;C正负号 &amp;plusmn;乘号 &amp;times;除号 &amp;divide;平方（上标 ²） &amp;sup2;立方（上标 ³） &amp;sup3; 实际效果: 和号 &amp; 人民币 &yen; 版权 &copy; 注册商标 &reg; 摄氏度 &deg;C 正负号 &plusmn; 乘号 &times; 除号 &divide; 平方（上标 ²） &sup2; 立方（上标 ³） &sup3; End.","categories":[{"name":"MarkDown","slug":"MarkDown","permalink":"http://yoursite.com/categories/MarkDown/"}],"tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"http://yoursite.com/tags/MarkDown/"}]},{"title":"Node.js环境搭建遇到的问题","slug":"Nodejs环境搭建遇到的问题","date":"2020-06-17T00:31:27.000Z","updated":"2020-06-17T08:19:42.608Z","comments":true,"path":"2020/06/17/Nodejs环境搭建遇到的问题/","link":"","permalink":"http://yoursite.com/2020/06/17/Nodejs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","excerpt":"一. Node.js 环境搭建问题 安装完 nodejs 时 一般在安装时就会改写系统环境变量指向这样执行控制台指令时不会出现无法找到文件的错误 如果查看系统环境变量 path 没有指向 node.js 根目录的文件 需要自行创建","text":"一. Node.js 环境搭建问题 安装完 nodejs 时 一般在安装时就会改写系统环境变量指向这样执行控制台指令时不会出现无法找到文件的错误 如果查看系统环境变量 path 没有指向 node.js 根目录的文件 需要自行创建 安装后的第一时间 要在 nodejs 根目录下创建 node_cache 与 node-global 文件夹 不然运行控制台指令会报错 使用 npm 指令时 一定要使用 管理员权限的控制台不然会因为权限不足而出现很多安装错误 二. 常用的 npm 指令2.1 安装/升级将某个包升级到最新版1npm install vue-loader@latest --save-dev-g 全局安装/卸载12npm install -gnpm uninstall -g 生产环境安装/卸载12npm install module_name -Snpm install module_name --save 12npm uninstall module_name -S &lt;br&gt;npm uninstall module_name --save d写入dependencies 开发环境安装/卸载12npm install module_name -Dnpm install module_name --save-dev 写入devDependencies 12npm uninstall module_name -Dnpm uninstall module_name --save-dev 写入devDependencies 查看模块查看所有全局安装的模块 1npm ls -g 查看 npm 默认设置（部分） 1npm config ls 查看 npm 默认设置（全部） 1npm config ls -l 修改默认安装目录 1npm config set prefix “D:\\ProgramFiles\\npm_global_modules\\node_modules” npm 更新检查更新 123npm-checknpm install -g npm-checknpm-check 更新 123npm-upgradenpm install -g npm-upgradenpm-upgrade 用法解释:https://www.npmjs.com/package/npm-upgrade 更新全局包： 1npm update -g 更新生产环境依赖包： 1npm update --save 更新开发环境依赖包： 1npm update --save-dev 其他 1https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;a1bb4c317c3e ————————————————","categories":[{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/categories/Node-js/"}],"tags":[{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/tags/Node-js/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-15T07:42:10.312Z","updated":"2020-06-17T08:17:08.234Z","comments":true,"path":"2020/06/15/hello-world/","link":"","permalink":"http://yoursite.com/2020/06/15/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"hello world","slug":"hello-world","permalink":"http://yoursite.com/categories/hello-world/"}],"tags":[]}],"categories":[{"name":"CDN","slug":"CDN","permalink":"http://yoursite.com/categories/CDN/"},{"name":"MarkDown","slug":"MarkDown","permalink":"http://yoursite.com/categories/MarkDown/"},{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/categories/Node-js/"},{"name":"hello world","slug":"hello-world","permalink":"http://yoursite.com/categories/hello-world/"}],"tags":[{"name":"CDN","slug":"CDN","permalink":"http://yoursite.com/tags/CDN/"},{"name":"MarkDown","slug":"MarkDown","permalink":"http://yoursite.com/tags/MarkDown/"},{"name":"Node.js","slug":"Node-js","permalink":"http://yoursite.com/tags/Node-js/"}]}